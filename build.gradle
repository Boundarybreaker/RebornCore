buildscript {
	repositories {
		jcenter()
		maven {
			name = "Forge"
			url = 'https://files.minecraftforge.net/maven'
		}
        maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.2.5-SNAPSHOT"
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'

allprojects {

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			name = "Modmuss50"
			url = "http://maven.modmuss50.me/"
		}
		maven {
			name = 'sponge'
			url = 'https://repo.spongepowered.org/maven'
		}
		maven {
			name = 'minecraft'
			url = 'https://libraries.minecraft.net/'
		}
	}
}

group = 'RebornCore'

allprojects {
	version = "4.0.15"
	def ENV = System.getenv()
	def build_number = ENV.BUILD_NUMBER ?: "local"
	version = "${version}+build.$build_number"
}

configurations {
	ctRuntime {}
}

dependencies {
	minecraft "com.mojang:minecraft:1.14.4"
	mappings "net.fabricmc:yarn:1.14.4+build.2"

	compileOnly "com.google.code.findbugs:jsr305:+"

	compile 'org.checkerframework:checker-qual:2.10.0'
	compile 'org.spongepowered:configurate-hocon:3.6'
	compile 'teamreborn:energy:0.0.7'

	include 'org.spongepowered:configurate-hocon:3.6'
	include 'org.spongepowered:configurate-core:3.6'
	include 'com.typesafe:config:1.3.1'
	include 'teamreborn:energy:0.0.7'

	ctRuntime "CurseTools:CurseTools:+"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

jar {
	classifier = "base"
}


task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "basesources"
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		maven {
			url "http://mavenupload.modmuss50.me/"
			if (project.hasProperty('mavenPass')) {
				credentials {
					username 'buildslave'
					password project.getProperty('mavenPass')
				}
			}
		}
	}
}

task curseTools {
	doLast {
		logger.lifecycle(":launching CurseTools")
		ant.setLifecycleLogLevel "INFO"
		ant.java(classname: 'me.modmuss50.cursetools.Main', classpath: configurations.ctRuntime.asPath, fork: true, spawn: false) {
			arg(value: remapJar.archivePath.getAbsolutePath())
		}
	}
}


task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.runtime
}