buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
}


repositories {
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
	maven{
        name "tterrag Repo"
        url "http://maven.tterrag.com/"
    }
    maven {
        name "TiC"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

version = "2.0.5"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
    version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

minecraft {
    version = "1.9-12.16.0.1863-1.9"
    mappings = "snapshot_20160316"
    replace "@MODVERSION@", project.version
	runDir = "run"
}

group = 'RebornCore'


dependencies {
    //THIS IS NOT HOW YOU INCLUDE JSON DESTROYER! LOOK AT THE EXAMPLE!
    shade 'JSON-Destroyer:JSON-Destroyer-1.9:2.1.+:dev'
	shade 'org.hjson:hjson:1.1.3'
    deobfCompile "mezz.jei:jei_1.9:3.2.10.+"
}

processResources
        {
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }


task deobfJar(type: Jar) {
    from sourceSets.main.output
    exclude "**/*.psd"
    classifier = 'dev'
	configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            include 'me/modmuss50/jsonDestroyer/'
        }
    }
}

jar {
    exclude "**/*.psd"
    classifier = 'universal'
        configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            include 'me/modmuss50/jsonDestroyer/'
        }
    }
	manifest{
        attributes 'FMLCorePlugin': 'reborncore.asm.RebornASM'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        //attributes 'TweakClass': 'chylex.reborncore.javacheck.Java8Checker'
    }
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
        include 'reborncore/api/**/*'

    classifier = "api"
}

apiJar.mustRunAfter deobfJar

artifacts {
    archives deobfJar
    archives apiJar
}

uploadArchives {
    repositories {
        mavenDeployer {
		//This is used when the build is done on a slave node
		if (project.hasProperty('mavenPass'))
        {
			println 'Uploading to remote Maven Repo'
            repository(url: "http://mavenupload.modmuss50.me/") {
                authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
            }
        }
        else
        { 
			//this is when the build is executed on the master node
			println 'Uploading to local Maven Repo'
           repository(url: "file:///var/www/maven/")
        }
		
		
            
            pom {
                groupId = "RebornCore"
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'RebornCore'
                    url 'https://github.com/TechReborn/RebornCore'
                    scm {
                        url 'https://github.com/TechReborn/RebornCore'
                        connection 'scm:git:git@github.com:TechReborn/RebornCore.git'
                        developerConnection 'scm:git:git@github.com:TechReborn/RebornCore.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/TechReborn/RebornCore/issues'
                    }
                    licenses {
                        license {
                            name 'License'
                            url 'https://raw.githubusercontent.com/TechReborn/RebornCore/master/LICENSE.md'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'modmuss50'
                            name 'modmuss50'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Gigabit101'
                            name 'Gigabit101'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    //To update the wrapper change the version bellow then run: gradle wrapper
    gradleVersion = '2.8'
}
